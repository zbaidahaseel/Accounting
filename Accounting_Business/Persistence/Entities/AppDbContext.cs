// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Accounting_Business.Persistence.Entities;

public partial class AppDbContext : DbContext
{
    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<AccountClassification> AccountClassifications { get; set; }

    public virtual DbSet<Agent> Agents { get; set; }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<CostCenter> CostCenters { get; set; }

    public virtual DbSet<Currency> Currencies { get; set; }

    public virtual DbSet<ReceivablesPayablesClassification> ReceivablesPayablesClassifications { get; set; }

    public virtual DbSet<SubAccountClassification> SubAccountClassifications { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.AccountNumber).HasName("PK__accounts__FD291E40DC0A274C");

            entity.ToTable("accounts");

            entity.Property(e => e.AccountNumber)
                .HasMaxLength(50)
                .HasColumnName("account_number");
            entity.Property(e => e.AccountClassificationId).HasColumnName("account_classification_id");
            entity.Property(e => e.BudgetItem).HasColumnName("budget_item");
            entity.Property(e => e.CurrencyId).HasColumnName("currency_id");
            entity.Property(e => e.EnglishName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("english_name");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasAnnotation("Relational:DefaultConstraintName", "DF_accounts_is_active")
                .HasColumnName("is_active");
            entity.Property(e => e.Level).HasColumnName("level");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("name");
            entity.Property(e => e.ParentAccountNumber)
                .HasMaxLength(50)
                .HasColumnName("parent_account_number");
            entity.Property(e => e.SubAccountClassificationId).HasColumnName("sub_account_classification_id");

            entity.HasOne(d => d.AccountClassification).WithMany(p => p.Accounts)
                .HasForeignKey(d => d.AccountClassificationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__accounts__ACCOUN__3A81B327");

            entity.HasOne(d => d.Currency).WithMany(p => p.Accounts)
                .HasForeignKey(d => d.CurrencyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_accounts_currency");

            entity.HasOne(d => d.ParentAccountNumberNavigation).WithMany(p => p.InverseParentAccountNumberNavigation)
                .HasForeignKey(d => d.ParentAccountNumber)
                .HasConstraintName("FK_accounts_parent_accounts");

            entity.HasOne(d => d.SubAccountClassification).WithMany(p => p.Accounts)
                .HasForeignKey(d => d.SubAccountClassificationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__accounts__SUB_AC__3B75D760");
        });

        modelBuilder.Entity<AccountClassification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__account___3214EC27992506E5");

            entity.ToTable("account_classifications");

            entity.Property(e => e.Id)
                .HasDefaultValue(1)
                .HasAnnotation("Relational:DefaultConstraintName", "DF_account_classifications_ID")
                .HasColumnName("ID");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(false)
                .HasAnnotation("Relational:DefaultConstraintName", "DF__account_c__IS_AC__37A5467C")
                .HasColumnName("IS_ACTIVE");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("NAME");
        });

        modelBuilder.Entity<Agent>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__agents__3213E83F1B42F470");

            entity.ToTable("agents");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasAnnotation("Relational:DefaultConstraintName", "DF__agents__is_activ__3E52440B")
                .HasColumnName("is_active");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("name");
        });

        modelBuilder.Entity<City>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Cities_Id");

            entity.ToTable("cities");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasAnnotation("Relational:DefaultConstraintName", "DF_cities_is_active")
                .HasColumnName("is_active");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("name");
        });

        modelBuilder.Entity<CostCenter>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cost_cen__3213E83F3189783A");

            entity.ToTable("cost_centers");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasAnnotation("Relational:DefaultConstraintName", "DF__cost_cent__is_ac__440B1D61")
                .HasColumnName("is_active");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("name");
        });

        modelBuilder.Entity<Currency>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__currenci__3213E83F3F7D9F0E");

            entity.ToTable("currencies");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.DecimalPlaces).HasColumnName("decimal_places");
            entity.Property(e => e.IsoCode)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("iso_code");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("name");
        });

        modelBuilder.Entity<ReceivablesPayablesClassification>(entity =>
        {
            entity.ToTable("receivables_payables_classifications");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasAnnotation("Relational:DefaultConstraintName", "DF_receivables_payables_classifications_is_active")
                .HasColumnName("is_active");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("name");
        });

        modelBuilder.Entity<SubAccountClassification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__sub_acco__3213E83F09EC5A29");

            entity.ToTable("sub_account_classifications");

            entity.Property(e => e.Id)
                .HasDefaultValue(1)
                .HasAnnotation("Relational:DefaultConstraintName", "DF_sub_account_classifications_id")
                .HasColumnName("id");
            entity.Property(e => e.AccountClassificationId).HasColumnName("account_classification_id");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasAnnotation("Relational:DefaultConstraintName", "DF__sub_accou__is_ac__48CFD27E")
                .HasColumnName("is_active");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("name");

            entity.HasOne(d => d.AccountClassification).WithMany(p => p.SubAccountClassifications)
                .HasForeignKey(d => d.AccountClassificationId)
                .HasConstraintName("FK_account_classification");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}